{"version":3,"sources":["stitches.config.ts","Interactive.tsx","App.tsx","index.tsx"],"names":["styled","css","createStyled","prefix","tokens","colors","$pageBackground","$codeBlockBackground","$highContrast","$lowContrast","$red","$green","$blue","breakpoints","utils","darkThemeClass","theme","globalStyles","global","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","html","height","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","minHeight","backgroundColor","StyledDarkModeToggle","onClick","className","props","toString","as","hover","active","focusFromTab","style","outline","outlineOffset","touchActiveTapOnly","width","display","outlineColor","StyledInteractiveLink","target","rel","borderBottom","borderBottomStyle","AppDiv","maxWidth","H1","justifyContent","marginBottom","H2","CodeBlock","borderRadius","Code","Result","variants","bool","true","false","BooleanResult","App","darkMode","useDarkMode","undefined","classNameDark","toggle","href","deviceType","primaryInput","supportsPointerEvents","supportsTouchEvents","supportsPassiveEvents","window","matchMedia","matches","navigator","maxTouchPoints","screen","userAgent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e6378d7.chunk.js","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const { styled, css } = createStyled({\n  prefix: '',\n  tokens: {\n    colors: {\n      $pageBackground: 'rgb(240,240,240)',\n      $codeBlockBackground: 'rgb(224,224,224)',\n      $highContrast: 'rgb(0,0,0)',\n      $lowContrast: 'rgb(128,128,128)',\n      $red: 'rgb(224,0,0)',\n      $green: 'rgb(0,168,0)',\n      $blue: 'rgb(0,0,224)',\n    },\n  },\n  breakpoints: {},\n  utils: {},\n});\n\nexport const darkThemeClass = css.theme({\n  colors: {\n    $pageBackground: 'rgb(32,32,32)',\n    $codeBlockBackground: 'rgb(56,56,56)',\n    $highContrast: 'rgb(192,192,192)',\n    $lowContrast: 'rgb(136,136,136)',\n    $red: 'rgb(216,0,0)',\n    $green: 'rgb(0,168,0)',\n    $blue: 'rgb(118,118,255)',\n  },\n});\n\nexport const globalStyles = css.global({\n  'body, div, span, a, p, h1, h2, code': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import Interactive from 'react-interactive';\nimport { SunIcon } from '@modulz/radix-icons';\nimport { styled } from './stitches.config';\n\ninterface DarkModeToggleProps {\n  onClick: () => void;\n  className?: any;\n}\nconst DarkModeToggle: React.VFC<DarkModeToggleProps> = ({\n  onClick,\n  className,\n  ...props\n}) => {\n  return (\n    <Interactive\n      {...props}\n      className={className.toString()}\n      onClick={onClick}\n      as=\"span\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n    >\n      <SunIcon width=\"30\" height=\"30\" />\n    </Interactive>\n  );\n};\n\nexport const StyledDarkModeToggle = styled(DarkModeToggle, {\n  color: '$highContrast',\n  width: '30px',\n  height: '30px',\n  display: 'inline-block',\n\n  '&.hover': {\n    color: '$green',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  children: React.ReactNode;\n  href: string;\n  className?: any;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = (props) => {\n  return (\n    <Interactive\n      {...props}\n      className={props.className.toString()}\n      as=\"a\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    />\n  );\n};\n\nexport const StyledInteractiveLink = styled(InteractiveLink, {\n  color: '$lowContrast',\n  borderBottom: '1px dotted $green',\n  textDecoration: 'none',\n\n  '&.hover': {\n    color: '$highContrast',\n    borderBottomStyle: 'solid',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n","import {\n  deviceType,\n  primaryInput,\n  supportsPointerEvents,\n  supportsTouchEvents,\n  supportsPassiveEvents,\n} from 'detect-it';\nimport useDarkMode from 'use-dark-mode';\nimport { styled, globalStyles, darkThemeClass } from './stitches.config';\nimport { StyledInteractiveLink, StyledDarkModeToggle } from './Interactive';\n\nconst AppDiv = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '2px',\n});\n\nconst H2 = styled('h2', {\n  margin: '36px 0 -6px',\n  fontSize: '22px',\n});\n\nconst CodeBlock = styled('div', {\n  backgroundColor: '$codeBlockBackground',\n  padding: '4px 16px 6px',\n  borderRadius: '3px',\n  margin: '16px 0',\n});\n\nconst Code = styled('code', {\n  display: 'block',\n  margin: '5px 0',\n});\n\nconst Result = styled('span', {\n  color: '$blue',\n  variants: {\n    bool: {\n      true: {\n        color: '$green',\n      },\n      false: {\n        color: '$red',\n      },\n    },\n  },\n});\n\ninterface BooleanResultProps {\n  bool: boolean;\n}\nconst BooleanResult: React.FC<BooleanResultProps> = ({ bool }) => (\n  <Result bool={bool}>{`${bool}`}</Result>\n);\n\nexport const App = () => {\n  globalStyles();\n\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n\n  return (\n    <AppDiv>\n      <H1>\n        <span>Detect It &#8211; Live Detection</span>\n        <StyledDarkModeToggle onClick={darkMode.toggle} />\n      </H1>\n      <StyledInteractiveLink href=\"https://github.com/rafgraph/detect-it\">\n        https://github.com/rafgraph/detect-it\n      </StyledInteractiveLink>\n      <CodeBlock>\n        <Code>\n          deviceType: <Result>{deviceType}</Result>\n        </Code>\n        <Code>\n          primaryInput: <Result>{primaryInput}</Result>\n        </Code>\n        <Code>\n          supportsPointerEvents: <BooleanResult bool={supportsPointerEvents} />\n        </Code>\n        <Code>\n          supportsTouchEvents: <BooleanResult bool={supportsTouchEvents} />\n        </Code>\n        <Code>\n          supportsPassiveEvents: <BooleanResult bool={supportsPassiveEvents} />\n        </Code>\n      </CodeBlock>\n\n      <H2>Additional Device Info</H2>\n\n      <CodeBlock>\n        <Code>\n          primaryPointerFine:{' '}\n          <BooleanResult bool={window.matchMedia('(pointer: fine)').matches} />\n        </Code>\n        <Code>\n          anyPointerFine:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: fine)').matches}\n          />\n        </Code>\n        <Code>\n          primaryPointerCoarse:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(pointer: coarse)').matches}\n          />\n        </Code>\n        <Code>\n          anyPointerCoarse:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: coarse)').matches}\n          />\n        </Code>\n        {/* <Code>\n          primaryPointerNone:{' '}\n          <BooleanResult bool={window.matchMedia('(pointer: none)').matches} />\n        </Code>\n        <Code>\n          anyPointerNone:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: none)').matches}\n          />\n        </Code> */}\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          primaryHover:{' '}\n          <BooleanResult bool={window.matchMedia('(hover: hover)').matches} />\n        </Code>\n        <Code>\n          anyHover:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-hover: hover)').matches}\n          />\n        </Code>\n        <Code>\n          primaryHoverNone:{' '}\n          <BooleanResult bool={window.matchMedia('(hover: none)').matches} />\n        </Code>\n        <Code>\n          anyHoverNone:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-hover: none)').matches}\n          />\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          pointerEventInWindow:{' '}\n          <BooleanResult bool={'PointerEvent' in window} />\n        </Code>\n        <Code>\n          maxTouchPoints:{' '}\n          <Result>{`${window.navigator.maxTouchPoints}`}</Result>\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          onTouchStartInWindow:{' '}\n          <BooleanResult bool={'ontouchstart' in window} />\n        </Code>\n        <Code>\n          touchEventInWindow: <BooleanResult bool={'TouchEvent' in window} />\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          screenSize:{' '}\n          <Result>{`${window.screen.width}x${window.screen.height}`}</Result>\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          userAgent: <Result>{window.navigator.userAgent}</Result>\n        </Code>\n      </CodeBlock>\n    </AppDiv>\n  );\n};\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}