{"version":3,"sources":["stitches.config.ts","ui/DarkModeButton.tsx","ui/Link.tsx","App.tsx","index.tsx"],"names":["styled","css","global","createGlobalCss","theme","createCss","colors","pageBackground","codeBlockBackground","highContrast","lowContrast","red","green","blue","purple","fonts","mono","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","lineHeight","wordBreak","color","background","outline","WebkitTapHighlightColor","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","textSizeAdjust","code","height","minHeight","backgroundColor","Button","Interactive","borderColor","boxShadow","DarkModeButton","props","storageProvider","localStorage","darkMode","useDarkMode","undefined","classNameDark","React","value","document","documentElement","style","colorScheme","onClick","toggle","width","borderRadius","title","aria-label","StyledLink","A","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","Link","newWindow","target","rel","AppContainer","maxWidth","HeaderContainer","display","justifyContent","marginBottom","H1","marginRight","LinkContainer","H2","CodeBlock","Code","Result","variants","bool","true","false","BooleanResult","App","href","deviceType","primaryInput","supportsPointerEvents","supportsTouchEvents","supportsPassiveEvents","window","matchMedia","matches","navigator","maxTouchPoints","screen","userAgent","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6ba3d55d.chunk.js","sourcesContent":["import { createCss } from '@stitches/react';\n\nexport const { styled, css, global: createGlobalCss, theme } = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      codeBlockBackground: 'rgb(224,224,224)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      red: 'hsl(0,100%,45%)',\n      green: 'hsl(120,100%,33%)', // same as rgb(0,168,0)\n      blue: 'hsl(240,100%,50%)',\n      purple: 'hsl(270,100%,60%)',\n    },\n    fonts: {\n      mono: 'monospace',\n    },\n  },\n});\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    codeBlockBackground: 'rgb(56,56,56)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(146,146,146)',\n    red: 'hsl(0,100%,44%)',\n    green: 'hsl(120,85%,42%)',\n    blue: 'hsl(210,100%,60%)',\n    purple: 'hsl(270,85%,60%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  // unset all styles on interactive elements\n  'button, input, select, textarea, a, area': {\n    all: 'unset',\n  },\n  // normalize behavior on all elements\n  '*, *::before, *::after, button, input, select, textarea, a, area': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    lineHeight: 'inherit',\n    wordBreak: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    outline: 'none',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  // set base styles for the app\n  body: {\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    // use word-break instead of \"overflow-wrap: anywhere\" because of Safari support\n    wordBreak: 'break-word',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: '$mono',\n  },\n  // pass down height: 100% to the #root div\n  'body, html': {\n    height: '100%',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { SunIcon } from '@radix-ui/react-icons';\nimport useDarkMode from 'use-dark-mode';\nimport { styled, darkThemeClass } from '../stitches.config';\n\nconst Button = styled(Interactive.Button, {\n  color: '$highContrast',\n  '&.hover, &.active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.focusFromKey': {\n    boxShadow: '0 0 0 2px $colors$purple',\n  },\n});\n\nexport const DarkModeButton: React.VFC = (props) => {\n  // put a try catch around localStorage so this app will work in codesandbox\n  // when the user blocks third party cookies in chrome,\n  // which results in a security error when useDarkMode tries to access localStorage\n  // see https://github.com/codesandbox/codesandbox-client/issues/5397\n  let storageProvider: any = null;\n  try {\n    storageProvider = localStorage;\n  } catch {}\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n    storageProvider,\n  });\n\n  // add color-scheme style to <html> element\n  // so document scroll bars will have native dark mode styling\n  React.useEffect(() => {\n    if (darkMode.value === true) {\n      // @ts-ignore because colorScheme type not added yet\n      document.documentElement.style.colorScheme = 'dark';\n    } else {\n      // @ts-ignore\n      document.documentElement.style.colorScheme = 'light';\n    }\n  }, [darkMode.value]);\n\n  return (\n    <Button\n      {...props}\n      onClick={darkMode.toggle}\n      css={{\n        width: '36px',\n        height: '36px',\n        padding: '3px',\n        margin: '-3px',\n        borderRadius: '50%',\n      }}\n      title=\"Toggle dark mode\"\n      aria-label=\"Toggle dark mode\"\n    >\n      <SunIcon width=\"30\" height=\"30\" />\n    </Button>\n  );\n};\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nconst StyledLink = styled(Interactive.A, {\n  color: '$lowContrast',\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'solid',\n  textDecorationColor: '$green',\n  textDecorationThickness: 'from-font',\n  padding: '2px 3px',\n  margin: '-2px -3px',\n  borderRadius: '3px',\n  '&.hover, &.active': {\n    color: '$highContrast',\n    textDecorationColor: '$green',\n    textDecorationStyle: 'solid',\n  },\n  '&.focusFromKey': {\n    boxShadow: '0 0 0 2px $colors$purple ',\n  },\n});\n\ninterface LinkProps extends React.ComponentPropsWithoutRef<typeof StyledLink> {\n  newWindow?: boolean;\n}\n\nexport const Link: React.VFC<LinkProps> = ({ newWindow = true, ...props }) => (\n  <StyledLink\n    {...props}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n  />\n);\n","import {\n  deviceType,\n  primaryInput,\n  supportsPointerEvents,\n  supportsTouchEvents,\n  supportsPassiveEvents,\n} from 'detect-it';\nimport { styled, globalCss } from './stitches.config';\nimport { DarkModeButton } from './ui/DarkModeButton';\nimport { Link } from './ui/Link';\n\nconst AppContainer = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst HeaderContainer = styled('header', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '6px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  marginRight: '16px',\n});\n\nconst LinkContainer = styled('div', {\n  marginBottom: '20px',\n});\n\nconst H2 = styled('h2', {\n  margin: '36px 0 -6px',\n  fontSize: '22px',\n});\n\nconst CodeBlock = styled('div', {\n  backgroundColor: '$codeBlockBackground',\n  padding: '4px 16px 6px',\n  borderRadius: '6px',\n  margin: '16px 0',\n});\n\nconst Code = styled('code', {\n  display: 'block',\n  margin: '5px 0',\n});\n\nconst Result = styled('span', {\n  color: '$blue',\n  variants: {\n    bool: {\n      true: {\n        color: '$green',\n      },\n      false: {\n        color: '$red',\n      },\n    },\n  },\n});\n\ninterface BooleanResultProps {\n  bool: boolean;\n}\nconst BooleanResult: React.FC<BooleanResultProps> = ({ bool }) => (\n  <Result bool={bool}>{`${bool}`}</Result>\n);\n\nexport const App = () => {\n  globalCss();\n\n  return (\n    <AppContainer>\n      <HeaderContainer>\n        <H1>Detect It &#8211; Live Detection</H1>\n        <DarkModeButton />\n      </HeaderContainer>\n      <LinkContainer>\n        <Link\n          title=\"GitHub Repository for Detect It\"\n          href=\"https://github.com/rafgraph/detect-it\"\n        >\n          https://github.com/rafgraph/detect-it\n        </Link>\n      </LinkContainer>\n      <CodeBlock>\n        <Code>\n          deviceType: <Result>{deviceType}</Result>\n        </Code>\n        <Code>\n          primaryInput: <Result>{primaryInput}</Result>\n        </Code>\n        <Code>\n          supportsPointerEvents: <BooleanResult bool={supportsPointerEvents} />\n        </Code>\n        <Code>\n          supportsTouchEvents: <BooleanResult bool={supportsTouchEvents} />\n        </Code>\n        <Code>\n          supportsPassiveEvents: <BooleanResult bool={supportsPassiveEvents} />\n        </Code>\n      </CodeBlock>\n\n      <H2>Additional Device Info</H2>\n\n      <CodeBlock>\n        <Code>\n          primaryPointerFine:{' '}\n          <BooleanResult bool={window.matchMedia('(pointer: fine)').matches} />\n        </Code>\n        <Code>\n          anyPointerFine:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: fine)').matches}\n          />\n        </Code>\n        <Code>\n          primaryPointerCoarse:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(pointer: coarse)').matches}\n          />\n        </Code>\n        <Code>\n          anyPointerCoarse:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: coarse)').matches}\n          />\n        </Code>\n        {/* <Code>\n          primaryPointerNone:{' '}\n          <BooleanResult bool={window.matchMedia('(pointer: none)').matches} />\n        </Code>\n        <Code>\n          anyPointerNone:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: none)').matches}\n          />\n        </Code> */}\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          primaryHover:{' '}\n          <BooleanResult bool={window.matchMedia('(hover: hover)').matches} />\n        </Code>\n        <Code>\n          anyHover:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-hover: hover)').matches}\n          />\n        </Code>\n        <Code>\n          primaryHoverNone:{' '}\n          <BooleanResult bool={window.matchMedia('(hover: none)').matches} />\n        </Code>\n        <Code>\n          anyHoverNone:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-hover: none)').matches}\n          />\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          pointerEventInWindow:{' '}\n          <BooleanResult bool={'PointerEvent' in window} />\n        </Code>\n        <Code>\n          maxTouchPoints:{' '}\n          <Result>{`${window.navigator.maxTouchPoints}`}</Result>\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          onTouchStartInWindow:{' '}\n          <BooleanResult bool={'ontouchstart' in window} />\n        </Code>\n        <Code>\n          touchEventInWindow: <BooleanResult bool={'TouchEvent' in window} />\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          screenSize:{' '}\n          <Result>{`${window.screen.width}x${window.screen.height}`}</Result>\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          userAgent: <Result>{window.navigator.userAgent}</Result>\n        </Code>\n      </CodeBlock>\n    </AppContainer>\n  );\n};\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}